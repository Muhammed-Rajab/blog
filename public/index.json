[{"content":"Here\u0026rsquo;s the repo, if you are in a hurry.\nOK, I want to set the record straight: Before starting this project, I barely had any idea about telnet and its applications. Come on, what did you expect? I\u0026rsquo;m 19. \u0026ldquo;Old days\u0026rdquo; - pfff!\nI always saw this word pop-up in networking articles I read, and you\u0026rsquo;ll always find this term in every article that\u0026rsquo;s titled\n10 Cool Linux Terminal Tricks That You Should Know - And More!\nSo I decided to search it up in my favorite search engine (i use google, btw), and oh boy, was it cool.\nSo what\u0026rsquo;s Telnet really all about? Here\u0026rsquo;s how Wikipedia describes Telnet:\nThe telnet protocol is a client-server protocol that runs on a reliable connection-oriented transport. Most often, a telnet client connects over TCP to port 23 or 2323, where a Telnet server application is listening. The Telnet protocol abstracts any terminal as a Network Virtual Terminal (NVT). The client must simulate a NVT using the NVT codes when messaging the server.\nLet\u0026rsquo;s go through it like the good programmers we pretend to be are:\nNo.\nTo me, it\u0026rsquo;s basically a way to connect to a TCP server, get the data, display, and maybe send some data back to the server. That\u0026rsquo;s it. When I hear \u0026ldquo;Telnet\u0026rdquo;, I\u0026rsquo;m not thinking about NVT and all that, I\u0026rsquo;m too young for that.\nPersonally, telnet is just a cool way for me to watch star wars.\n$ telnet towel.blinkenlights.nl This was all I had in my mind when I read about telnet. A super high budget movie but in terminal rendered in ASCII, moving at a super smooth frame rate and ridiculously high resolution? What more can I ask for?\nAnd when I finally tried it out, here\u0026rsquo;s what I got\n‚ûú telnet towel.blinkenlights.nl Trying 213.136.8.188... Well, that sucks.\nMy dreams were shattered into smithereens. My eyes welled up, hips trembling, spirit crushed. AAHHHHHHHHHHH (dramatic cat noises)\nIt doesn\u0026rsquo;t matter. We all are meant to be disappointed. Life ain\u0026rsquo;t that easy, girl. Get over it.\nThis was enough to give me the motivation needed to work on my own TCP server application and I knew exactly what to do.\nIntroducing telnet.cpp A simple TCP server which allows you to go through a grand collection of 2 (as of today) telnet applications. So cool, isn\u0026rsquo;t it? Being as creative as a half-cut potato molding on the bottom shelf of the Fridge, I decided to name it telnet.cpp. And yes, I\u0026rsquo;ll be using C++ for the project, and here are the 13 reasons why I chose to use it:\nI hate myself I love to boast I\u0026rsquo;ll have to use C++ a lot in the near future The \u0026lsquo;M\u0026rsquo; is Masochist stands for me - - - - - - - - - Sorry, I don\u0026rsquo;t feel obliged to give all the 13 reasons. If you\u0026rsquo;ve ever done anything in C++, you can probably fill out the rest yourself.\nThe plan is simple:\nGive the user a menu to choose from. On choosing a program, render it to screen, accept user input, etc. Make it clean enough and allow multiple users. This won\u0026rsquo;t be a step-by-step guide on how to make one. The code I wrote is soo clean and self explanatory, even if you never did anything in C++, you\u0026rsquo;ll understand pretty much the whole thing, given that you have some idea about sockets in Linux. Yes, we\u0026rsquo;ll be using Linux sockets, not winsock (i !use arch, btw).\nTelnet App #1: kitty.says() A wise eye-blinking kitty giving you advice over the wire - could you be any more blessed? The app is quite simple. You store the kitty as frames, pair them with a bunch of quotes, and give the user the ability to go back to the menu, quit or even change the quote. Simple enough, right? It is.\nMost of the difficulty you\u0026rsquo;ll be facing here will be related to handling user input. You will struggle a bit with \u0026ldquo;IaCs\u0026rdquo; (Interpret as Commands), Typeahead buffers, and some other quirky little stuff.\nAnd in the end, I was left with this little thingy:\nTelnet App #2: cube.render() This\u0026hellip; this is it. This was something that I wanted to try for quite some time. A rotating wireframe cube with controls. A few months back I built terrible-renderer.cpp, and it was one of my favorite projects till date. I finally got the chance to understand 3D rendering, and I built something that\u0026rsquo;s very close to my heart - a fricking spinning DONUTüç©!\nEver since I started programming, I was so captivated by Andy Sloane\u0026rsquo;s Donut.c. It was my dream to build it myself one day. That myself part is quite important here. I want the math behind the rendering to slowly consume me from my inside, I didn\u0026rsquo;t want to just copy paste the code. And once I got there, I faced another challenge: How can I make this a cube?\nThere are several videos that explains the math behind the rendering, but it\u0026rsquo;s pretty much the same.\nGenerate Surface Coordinates -\u0026gt; Transformation -\u0026gt; Projection -\u0026gt; Lighting -\u0026gt; Rendering I attempted rendering the surface of the cube and I got a pretty satisfying result. But then I wanted to try something else. Something easier, but fun to do. So I chose to stick with Wireframe (no messy Z-Buffers, haha).\nAnd in the end, I was left with this big thingy,\nAs you can see, there are a few controls that you can mess around with to modify the cube\u0026rsquo;s behaviour. Just make sure to press RETURN after any control input (That\u0026rsquo;s how the server gets your input).\nIn the end\u0026hellip; it doesn\u0026rsquo;t even matter.\nNah, it does. I learned quite a bit from this project. I got to do some Linear Algebra, brush up on C++, and brag about the whole thing on Instagram. Ahhhhhh, INNER PEACE üïäÔ∏è\nThe project isn\u0026rsquo;t complete yet. I have to rewrite the server to handle multiple concurrent connections. Maybe polish the menu a bit? But I\u0026rsquo;ll be sure to keep you updated here, love üíñ.\n","permalink":"http://localhost:1313/blog/posts/i-miss-the-old-telnet-days-so-i-built-my-own-server/","summary":"\u003cp\u003eHere\u0026rsquo;s the \u003ca href=\"https://github.com/Muhammed-Rajab/telnet.cpp\"\u003e\u003cem\u003e\u003cstrong\u003erepo\u003c/strong\u003e\u003c/em\u003e\u003c/a\u003e, if you are in a hurry.\u003c/p\u003e\n\u003cp\u003eOK, I want to set the record straight: Before starting this project, I barely had any idea about telnet and its applications. Come on, what did you expect? I\u0026rsquo;m 19. \u003cstrong\u003e\u0026ldquo;Old days\u0026rdquo; - pfff!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eI always saw this word pop-up in networking articles I read, and you\u0026rsquo;ll always find this term in every article that\u0026rsquo;s titled\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003e10 Cool Linux Terminal Tricks That You Should Know - And More!\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e","title":"I Miss The Good Ol' Telnet Days - So I Built My Own Server"},{"content":"Hello World This is even crazier This is a new change\nHi\n#include \u0026lt;iostream\u0026gt; int main() { return EXIT_SUCCESS; } ","permalink":"http://localhost:1313/blog/posts/test-blog/","summary":"\u003ch1 id=\"hello-world\"\u003eHello World\u003c/h1\u003e\n\u003ch2 id=\"this-is-even-crazier\"\u003eThis is even crazier\u003c/h2\u003e\n\u003cp\u003eThis is a new change\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHi\u003c/p\u003e\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;iostream\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e EXIT_SUCCESS;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e","title":"Test Blog"},{"content":"A sudden urge to start documenting my life at 3 AM.\nI can\u0026rsquo;t see what it holds for me, but nonetheless, it begins here.\n","permalink":"http://localhost:1313/blog/posts/it-begins-here/","summary":"\u003cp\u003eA sudden urge to start documenting my life at 3 AM.\u003c/p\u003e\n\u003cp\u003eI can\u0026rsquo;t see what it holds for me,\nbut nonetheless, it begins here.\u003c/p\u003e","title":"It Begins Here"},{"content":"Here\u0026rsquo;s the repo, if you are in a hurry.\nOK, I want to set the record straight: Before starting this project, I barely had any idea about telnet and its applications. Come on, what did you expect? I\u0026rsquo;m 19. \u0026ldquo;Old days\u0026rdquo; - pfff!\nI always saw this word pop-up in networking articles I read, and you\u0026rsquo;ll always find this term in every article that\u0026rsquo;s titled\n10 Cool Linux Terminal Tricks That You Should Know - And More!\nSo I decided to search it up in my favorite search engine (i use google, btw), and oh boy, was it cool.\nSo what\u0026rsquo;s Telnet really all about? Here\u0026rsquo;s how Wikipedia describes Telnet:\nThe telnet protocol is a client-server protocol that runs on a reliable connection-oriented transport. Most often, a telnet client connects over TCP to port 23 or 2323, where a Telnet server application is listening. The Telnet protocol abstracts any terminal as a Network Virtual Terminal (NVT). The client must simulate a NVT using the NVT codes when messaging the server.\nLet\u0026rsquo;s go through it like the good programmers we pretend to be are:\nNo.\nTo me, it\u0026rsquo;s basically a way to connect to a TCP server, get the data, display, and maybe send some data back to the server. That\u0026rsquo;s it. When I hear \u0026ldquo;Telnet\u0026rdquo;, I\u0026rsquo;m not thinking about NVT and all that, I\u0026rsquo;m too young for that.\nPersonally, telnet is just a cool way for me to watch star wars.\n$ telnet towel.blinkenlights.nl This was all I had in my mind when I read about telnet. A super high budget movie but in terminal rendered in ASCII, moving at a super smooth frame rate and ridiculously high resolution? What more can I ask for?\nAnd when I finally tried it out, here\u0026rsquo;s what I got\n‚ûú telnet towel.blinkenlights.nl Trying 213.136.8.188... Well, that sucks.\nMy dreams were shattered into smithereens. My eyes welled up, hips trembling, spirit crushed. AAHHHHHHHHHHH (dramatic cat noises)\nIt doesn\u0026rsquo;t matter. We all are meant to be disappointed. Life ain\u0026rsquo;t that easy, girl. Get over it.\nThis was enough to give me the motivation needed to work on my own TCP server application and I knew exactly what to do.\nIntroducing telnet.cpp A simple TCP server which allows you to go through a grand collection of 2 (as of today) telnet applications. So cool, isn\u0026rsquo;t it? Being as creative as a half-cut potato molding on the bottom shelf of the Fridge, I decided to name it telnet.cpp. And yes, I\u0026rsquo;ll be using C++ for the project, and here are the 13 reasons why I chose to use it:\nI hate myself I love to boast I\u0026rsquo;ll have to use C++ a lot in the near future The \u0026lsquo;M\u0026rsquo; is Masochist stands for me - - - - - - - - - Sorry, I don\u0026rsquo;t feel obliged to give all the 13 reasons. If you\u0026rsquo;ve ever done anything in C++, you can probably fill out the rest yourself.\nThe plan is simple:\nGive the user a menu to choose from. On choosing a program, render it to screen, accept user input, etc. Make it clean enough and allow multiple users. This won\u0026rsquo;t be a step-by-step guide on how to make one. The code I wrote is soo clean and self explanatory, even if you never did anything in C++, you\u0026rsquo;ll understand pretty much the whole thing, given that you have some idea about sockets in Linux. Yes, we\u0026rsquo;ll be using Linux sockets, not winsock (i !use arch, btw).\nMain Menu It\u0026rsquo;s not much, but it\u0026rsquo;s interactive, eyy. There\u0026rsquo;s a timeout of 30s and the user can select any from the two of the applications (as of now).\nTelnet App #1: kitty.says() A wise eye-blinking kitty giving you advice over the wire - could you be any more blessed? The app is quite simple. You store the kitty as frames, pair them with a bunch of quotes, and give the user the ability to go back to the menu, quit or even change the quote. Simple enough, right? It is.\nMost of the difficulty you\u0026rsquo;ll be facing here will be related to handling user input. You will struggle a bit with \u0026ldquo;IaCs\u0026rdquo; (Interpret as Commands), Typeahead buffers, and some other quirky little stuff.\nAnd in the end, I was left with this little thingy:\nTelnet App #2: cube.render() This\u0026hellip; this is it. This was something that I wanted to try for quite some time. A rotating wireframe cube with controls. A few months back I built terrible-renderer.cpp, and it was one of my favorite projects till date. I finally got the chance to understand 3D rendering, and I built something that\u0026rsquo;s very close to my heart - a fricking spinning DONUTüç©!\nEver since I started programming, I was so captivated by Andy Sloane\u0026rsquo;s Donut.c. It was my dream to build it myself one day. That myself part is quite important here. I want the math behind the rendering to slowly consume me from my inside, I didn\u0026rsquo;t want to just copy paste the code. And once I got there, I faced another challenge: How can I make this a cube?\nThere are several videos that explains the math behind the rendering, but it\u0026rsquo;s pretty much the same.\nGenerate Surface Coordinates -\u0026gt; Transformation -\u0026gt; Projection -\u0026gt; Lighting -\u0026gt; Rendering I attempted rendering the surface of the cube and I got a pretty satisfying result. But then I wanted to try something else. Something easier, but fun to do. So I chose to stick with Wireframe (no messy Z-Buffers, haha).\nAnd in the end, I was left with this big thingy,\nAs you can see, there are a few controls that you can mess around with to modify the cube\u0026rsquo;s behaviour. Just make sure to press RETURN after any control input (That\u0026rsquo;s how the server gets your input).\nIn the end\u0026hellip; it doesn\u0026rsquo;t even matter.\nNah, it does. I learned quite a bit from this project. I got to do some Linear Algebra, brush up on C++, and brag about the whole thing on Instagram. Ahhhhhh, INNER PEACE üïäÔ∏è\nThe project isn\u0026rsquo;t complete yet. I have to rewrite the server to handle multiple concurrent connections. Maybe polish the menu a bit? But I\u0026rsquo;ll be sure to keep you updated here, love üíñ.\n","permalink":"http://localhost:1313/blog/posts/i-miss-the-old-telnet-days-so-i-built-my-own-server/","summary":"\u003cp\u003eHere\u0026rsquo;s the \u003ca href=\"https://github.com/Muhammed-Rajab/telnet.cpp\"\u003e\u003cem\u003e\u003cstrong\u003erepo\u003c/strong\u003e\u003c/em\u003e\u003c/a\u003e, if you are in a hurry.\u003c/p\u003e\n\u003cp\u003eOK, I want to set the record straight: Before starting this project, I barely had any idea about telnet and its applications. Come on, what did you expect? I\u0026rsquo;m 19. \u003cstrong\u003e\u0026ldquo;Old days\u0026rdquo; - pfff!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eI always saw this word pop-up in networking articles I read, and you\u0026rsquo;ll always find this term in every article that\u0026rsquo;s titled\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003e10 Cool Linux Terminal Tricks That You Should Know - And More!\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e","title":"I Miss The Good Ol' Telnet Days - So I Built My Own Server"},{"content":"Hello World This is even crazier This is a new change\nHi\n#include \u0026lt;iostream\u0026gt; int main() { return EXIT_SUCCESS; } ","permalink":"http://localhost:1313/blog/posts/test-blog/","summary":"\u003ch1 id=\"hello-world\"\u003eHello World\u003c/h1\u003e\n\u003ch2 id=\"this-is-even-crazier\"\u003eThis is even crazier\u003c/h2\u003e\n\u003cp\u003eThis is a new change\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHi\u003c/p\u003e\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;iostream\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e EXIT_SUCCESS;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e","title":"Test Blog"},{"content":"A sudden urge to start documenting my life at 3 AM.\nI can\u0026rsquo;t see what it holds for me, but nonetheless, it begins here.\n","permalink":"http://localhost:1313/blog/posts/it-begins-here/","summary":"\u003cp\u003eA sudden urge to start documenting my life at 3 AM.\u003c/p\u003e\n\u003cp\u003eI can\u0026rsquo;t see what it holds for me,\nbut nonetheless, it begins here.\u003c/p\u003e","title":"It Begins Here"},{"content":"Here\u0026rsquo;s the repo, if you are in a hurry.\nOK, I want to set the record straight: Before starting this project, I barely had any idea about telnet and its applications. Come on, what did you expect? I\u0026rsquo;m 19. \u0026ldquo;Old days\u0026rdquo; - pfff!\nI always saw this word pop-up in networking articles I read, and you\u0026rsquo;ll always find this term in every article that\u0026rsquo;s titled\n10 Cool Linux Terminal Tricks That You Should Know - And More!\nSo I decided to search it up in my favorite search engine (i use google, btw), and oh boy, was it cool.\nSo what\u0026rsquo;s Telnet really all about? Here\u0026rsquo;s how Wikipedia describes Telnet:\nThe telnet protocol is a client-server protocol that runs on a reliable connection-oriented transport. Most often, a telnet client connects over TCP to port 23 or 2323, where a Telnet server application is listening. The Telnet protocol abstracts any terminal as a Network Virtual Terminal (NVT). The client must simulate a NVT using the NVT codes when messaging the server.\nLet\u0026rsquo;s go through it like the good programmers we pretend to be are:\nNo.\nTo me, it\u0026rsquo;s basically a way to connect to a TCP server, get the data, display, and maybe send some data back to the server. That\u0026rsquo;s it. When I hear \u0026ldquo;Telnet\u0026rdquo;, I\u0026rsquo;m not thinking about NVT and all that, I\u0026rsquo;m too young for that.\nPersonally, telnet is just a cool way for me to watch star wars.\n$ telnet towel.blinkenlights.nl This was all I had in my mind when I read about telnet. A super high budget movie but in terminal rendered in ASCII, moving at a super smooth frame rate and ridiculously high resolution? What more can I ask for?\nAnd when I finally tried it out, here\u0026rsquo;s what I got\n‚ûú telnet towel.blinkenlights.nl Trying 213.136.8.188... Well, that sucks.\nMy dreams were shattered into smithereens. My eyes welled up, hips trembling, spirit crushed. AAHHHHHHHHHHH (dramatic cat noises)\nIt doesn\u0026rsquo;t matter. We all are meant to be disappointed. Life ain\u0026rsquo;t that easy, girl. Get over it.\nThis was enough to give me the motivation needed to work on my own TCP server application and I knew exactly what to do.\nIntroducing telnet.cpp A simple TCP server which allows you to go through a grand collection of 2 (as of today) telnet applications. So cool, isn\u0026rsquo;t it? Being as creative as a half-cut potato molding on the bottom shelf of the Fridge, I decided to name it telnet.cpp. And yes, I\u0026rsquo;ll be using C++ for the project, and here are the 13 reasons why I chose to use it:\nI hate myself I love to boast I\u0026rsquo;ll have to use C++ a lot in the near future The \u0026lsquo;M\u0026rsquo; is Masochist stands for me - - - - - - - - - Sorry, I don\u0026rsquo;t feel obliged to give all the 13 reasons. If you\u0026rsquo;ve ever done anything in C++, you can probably fill out the rest yourself.\nThe plan is simple:\nGive the user a menu to choose from. On choosing a program, render it to screen, accept user input, etc. Make it clean enough and allow multiple users. This won\u0026rsquo;t be a step-by-step guide on how to make one. The code I wrote is soo clean and self explanatory, even if you never did anything in C++, you\u0026rsquo;ll understand pretty much the whole thing, given that you have some idea about sockets in Linux. Yes, we\u0026rsquo;ll be using Linux sockets, not winsock (i !use arch, btw).\nMain Menu It\u0026rsquo;s not much, but it\u0026rsquo;s interactive, eyy. There\u0026rsquo;s a timeout of 30s and the user can select any from the two of the applications (as of now).\nTelnet App #1: kitty.says() A wise eye-blinking kitty giving you advice over the wire - could you be any more blessed? The app is quite simple. You store the kitty as frames, pair them with a bunch of quotes, and give the user the ability to go back to the menu, quit or even change the quote. Simple enough, right? It is.\nMost of the difficulty you\u0026rsquo;ll be facing here will be related to handling user input. You will struggle a bit with \u0026ldquo;IaCs\u0026rdquo; (Interpret as Commands), Typeahead buffers, and some other quirky little stuff.\nAnd in the end, I was left with this little thingy:\nTelnet App #2: cube.render() This\u0026hellip; this is it. This was something that I wanted to try for quite some time. A rotating wireframe cube with controls. A few months back I built terrible-renderer.cpp, and it was one of my favorite projects till date. I finally got the chance to understand 3D rendering, and I built something that\u0026rsquo;s very close to my heart - a fricking spinning DONUTüç©!\nEver since I started programming, I was so captivated by Andy Sloane\u0026rsquo;s Donut.c. It was my dream to build it myself one day. That myself part is quite important here. I want the math behind the rendering to slowly consume me from my inside, I didn\u0026rsquo;t want to just copy paste the code. And once I got there, I faced another challenge: How can I make this a cube?\nThere are several videos that explains the math behind the rendering, but it\u0026rsquo;s pretty much the same.\nGenerate Surface Coordinates -\u0026gt; Transformation -\u0026gt; Projection -\u0026gt; Lighting -\u0026gt; Rendering I attempted rendering the surface of the cube and I got a pretty satisfying result. But then I wanted to try something else. Something easier, but fun to do. So I chose to stick with Wireframe (no messy Z-Buffers, haha).\nAnd in the end, I was left with this big thingy,\nAs you can see, there are a few controls that you can mess around with to modify the cube\u0026rsquo;s behaviour. Just make sure to press RETURN after any control input (That\u0026rsquo;s how the server gets your input).\nIn the end\u0026hellip; it doesn\u0026rsquo;t even matter.\nNah, it does. I learned quite a bit from this project. I got to do some Linear Algebra, brush up on C++, and brag about the whole thing on Instagram. Ahhhhhh, INNER PEACE üïäÔ∏è\nThe project isn\u0026rsquo;t complete yet. I have to rewrite the server to handle multiple concurrent connections. Maybe polish the menu a bit? But I\u0026rsquo;ll be sure to keep you updated here, love üíñ.\n","permalink":"http://localhost:1313/blog/posts/i-miss-the-old-telnet-days-so-i-built-my-own-server/","summary":"\u003cp\u003eHere\u0026rsquo;s the \u003ca href=\"https://github.com/Muhammed-Rajab/telnet.cpp\"\u003e\u003cem\u003e\u003cstrong\u003erepo\u003c/strong\u003e\u003c/em\u003e\u003c/a\u003e, if you are in a hurry.\u003c/p\u003e\n\u003cp\u003eOK, I want to set the record straight: Before starting this project, I barely had any idea about telnet and its applications. Come on, what did you expect? I\u0026rsquo;m 19. \u003cstrong\u003e\u0026ldquo;Old days\u0026rdquo; - pfff!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eI always saw this word pop-up in networking articles I read, and you\u0026rsquo;ll always find this term in every article that\u0026rsquo;s titled\u003c/p\u003e\n\u003cp\u003e\u003cem\u003e\u003cstrong\u003e10 Cool Linux Terminal Tricks That You Should Know - And More!\u003c/strong\u003e\u003c/em\u003e\u003c/p\u003e","title":"I Miss The Good Ol' Telnet Days - So I Built My Own Server"},{"content":"Hello World This is even crazier This is a new change\nHi\n#include \u0026lt;iostream\u0026gt; int main() { return EXIT_SUCCESS; } ","permalink":"http://localhost:1313/blog/posts/test-blog/","summary":"\u003ch1 id=\"hello-world\"\u003eHello World\u003c/h1\u003e\n\u003ch2 id=\"this-is-even-crazier\"\u003eThis is even crazier\u003c/h2\u003e\n\u003cp\u003eThis is a new change\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eHi\u003c/p\u003e\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-cpp\" data-lang=\"cpp\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e#include\u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e\u0026lt;iostream\u0026gt;\u003c/span\u003e\u003cspan style=\"color:#75715e\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e EXIT_SUCCESS;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003chr\u003e","title":"Test Blog"},{"content":"A sudden urge to start documenting my life at 3 AM.\nI can\u0026rsquo;t see what it holds for me, but nonetheless, it begins here.\n","permalink":"http://localhost:1313/blog/posts/it-begins-here/","summary":"\u003cp\u003eA sudden urge to start documenting my life at 3 AM.\u003c/p\u003e\n\u003cp\u003eI can\u0026rsquo;t see what it holds for me,\nbut nonetheless, it begins here.\u003c/p\u003e","title":"It Begins Here"}]